{"version":3,"file":"bundle.54a1462a6d7c68d5ec49.js","mappings":"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","sources":["webpack://big-trip/./src/render.js","webpack://big-trip/./src/mock/consts-mock.js","webpack://big-trip/./src/utils.js","webpack://big-trip/./src/service/mock-service.js","webpack://big-trip/./src/mock/destination-mock.js","webpack://big-trip/./src/mock/offer-mock.js","webpack://big-trip/./src/mock/point-mock.js","webpack://big-trip/./src/view/trip-point-view.js","webpack://big-trip/./src/view/sort-view.js","webpack://big-trip/./src/view/trip-info-view.js","webpack://big-trip/./src/view/filter-view.js","webpack://big-trip/./src/view/edit-point-view.js","webpack://big-trip/./src/view/list-view.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/model/destinations-model.js","webpack://big-trip/./src/model/offers-model.js","webpack://big-trip/./src/model/points-model.js","webpack://big-trip/./src/presenter/board-presenter.js"],"sourcesContent":["const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport { RenderPosition, createElement, render };\n","const CITIES = [\n  'Geneva',\n  'Charmonix',\n  'Amsterdam',\n  'Helsinki',\n  'Oslo',\n  'Kopenhagen',\n  'Den Haag',\n  'Rotterdam'\n];\n\nconst TYPES = [\n  'taxi',\n  'bus',\n  'train',\n  'flight',\n  'check-in',\n  'sightseeing',\n  'ship',\n  'drive',\n  'restaurant'\n];\n\nconst OFFER_TITLES = [\n  '1BlaBla1',\n  '2BlaBla2',\n  '3BlaBla3',\n  '4BlaBla4',\n  '5BlaBla5',\n  '6BlaBla6'\n];\n\nconst DESCRIPTION = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';\n\nconst DESTINATION_COUNT = 5;\nconst OFFER_COUNT = 9;\nconst POINT_COUNT = 5;\n\nconst Price = {\n  MIN: 100,\n  MAX: 10000\n};\n\nexport { OFFER_TITLES, CITIES, DESCRIPTION, DESTINATION_COUNT, OFFER_COUNT, POINT_COUNT, TYPES, Price };\n","function getRandomInteger(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomArrayElement(array) {\n  return array[getRandomInteger(0, array.length - 1)];\n}\n\nexport { getRandomInteger, getRandomArrayElement };\n","import { DESTINATION_COUNT, OFFER_COUNT, POINT_COUNT, TYPES } from '../mock/consts-mock.js';\nimport { getRandomInteger, getRandomArrayElement } from '../utils.js';\nimport generateDestination from '../mock/destination-mock.js';\nimport generateOffer from '../mock/offer-mock.js';\nimport generatePoint from '../mock/point-mock.js';\n\nexport default class MockService {\n  destinations = [];\n  offers = [];\n  points = [];\n\n  constructor() {\n    this.destinations = this.generateDestinationsArray();\n    this.offers = this.generateOffersArray();\n    this.points = this.generatePointsArray();\n  }\n\n  getDestinations() {\n    return this.destinations;\n  }\n\n  getOffers() {\n    return this.offers;\n  }\n\n  getPoints() {\n    return this.points;\n  }\n\n  generateDestinationsArray() {\n    return Array.from(\n      { length: DESTINATION_COUNT },\n      () => generateDestination()\n    );\n  }\n\n  generateOffersArray() {\n    return TYPES.map((type) => ({\n      type,\n      offers: Array.from(\n        { length: getRandomInteger(0, OFFER_COUNT) },\n        () => generateOffer(type))\n    }));\n  }\n\n  generatePointsArray() {\n    return Array.from(\n      { length: POINT_COUNT },\n      () => {\n        const type = getRandomArrayElement(TYPES);\n        const destination = getRandomArrayElement(this.destinations);\n\n        const hasOffers = getRandomInteger(0, 1);\n\n        const offersByType = this.offers.find((offerByType) => offerByType.type === type);\n\n        const offersIds = (hasOffers)\n          ? offersByType.offers\n            .slice(0, OFFER_COUNT)\n            .map((offer) => offer.id)\n          : [];\n        return generatePoint(type, destination.id, offersIds);\n      }\n    );\n  }\n\n}\n","import { getRandomArrayElement } from '../utils.js';\nimport { CITIES, DESCRIPTION } from './consts-mock.js';\n\nexport default function generateDestination() {\n  const city = getRandomArrayElement(CITIES);\n  const id = crypto.randomUUID();\n\n  return {\n    id: id,\n    name: city,\n    description: DESCRIPTION,\n    pictures: {\n      'src': `https://loremflickr.com/g/320/240/${id}`,\n      'description': `${city} description`\n    }\n  };\n}\n","import { getRandomInteger, getRandomArrayElement } from '../utils.js';\nimport { Price, OFFER_TITLES } from './consts-mock.js';\n\nexport default function generateOffer() {\n  const id = crypto.randomUUID();\n  return {\n    id: id,\n    title: getRandomArrayElement(OFFER_TITLES),\n    price: `${getRandomInteger(Price.MIN, Price.MAX / 10)} €`\n  };\n}\n","import { getRandomInteger } from '../utils.js';\nimport { Price } from './consts-mock.js';\n\nexport default function generatePoint(type, destinationId, offerId) {\n  const id = crypto.randomUUID();\n  const price = getRandomInteger(Price.MIN, Price.MAX);\n\n  return {\n    id: id,\n    type: type,\n    dateFrom: 'Start DD MM YYYY',\n    dateTo: 'End DD MM YYYY',\n    destination: destinationId,\n    basePrice: price,\n    isFavorite: !!(getRandomInteger(0, 1)),\n    offers: offerId\n  };\n}\n","import { createElement } from '../render.js';\nimport { CITIES } from '../mock/consts-mock.js';\nimport { getRandomArrayElement } from '../utils.js';\nimport MockService from '../service/mock-service.js';\n\nconst getOffers = (type) => {\n  const mockService = new MockService();\n  const offersByType = mockService.offers.find((offer) => offer.type === type).offers;\n\n  return offersByType.map(\n    (offer) => `<li class=\"event__offer\" >\n      <span class=\"event__offer-title\">${offer.title}</span>\n    <span class=\"event__offer-price\">${offer.price}</span>\n</li> `\n  ).join('');\n};\n\nconst getTemplate = (point) => {\n  const name = getRandomArrayElement(CITIES);\n  const { type, basePrice, isFavorite } = point;\n\n  return `<li class=\"trip-events__item\" >\n  <div class=\"event\">\n    <time class=\"event__date\" datetime=\"2019-03-18\">MAR 18</time>\n    <div class=\"event__type\">\n      <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${type}.png\" alt=\"Event ${type} icon\">\n    </div >\n    <h3 class=\"event__title\">${type} ${name}</h3>\n    <div class=\"event__schedule\">\n      <p class=\"event__time\">\n        <time class=\"event__start-time\" datetime=\"2019-03-18T10:30\">10:30</time>\n        &mdash;\n        <time class=\"event__end-time\" datetime=\"2019-03-18T11:00\">11:00</time>\n      </p>\n      <p class=\"event__duration\">30M</p>\n    </div>\n    <p class=\"event__price\">\n      &euro;&nbsp;<span class=\"event__price-value\">${basePrice}</span>\n    </p>\n    <h4 class=\"visually-hidden\">Offers:</h4>\n    <ul class=\"event__selected-offers\">\n      ${getOffers(type)}\n    </ul >\n    <button class=\"event__favorite-btn ${isFavorite ? 'event__favorite-btn--active' : ''} \" type=\"button\">\n      <span class=\"visually-hidden\">Add to favorite</span>\n      <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n        <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\" />\n      </svg>\n    </button>\n    <button class=\"event__rollup-btn\" type=\"button\">\n      <span class=\"visually-hidden\">Open event</span>\n    </button>\n  </div >\n</li> `;\n};\n\n\nexport default class TripPointView {\n  constructor({ point }) {\n    this.point = point;\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(getTemplate(this.point));\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\nexport default class SortView {\n  getTemplate() {\n    return (/*html*/\n      `<form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n      <div class=\"trip-sort__item  trip-sort__item--day\">\n        <input id=\"sort-day\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-day\">\n        <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--event\">\n        <input id=\"sort-event\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-event\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--time\">\n        <input id=\"sort-time\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-time\">\n        <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--price\">\n        <input id=\"sort-price\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-price\" checked>\n        <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--offer\">\n        <input id=\"sort-offer\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-offer\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n      </div>\n    </form>`);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\n","import { createElement } from '../render.js';\nexport default class TripInfoView {\n  getTemplate() {\n    return (/*html*/\n      `<section class=\"trip-main__trip-info  trip-info\">\n      <div class=\"trip-info__main\">\n        <h1 class=\"trip-info__title\">Amsterdam &mdash; Chamonix &mdash; Geneva</h1>\n\n        <p class=\"trip-info__dates\">Mar 18&nbsp;&mdash;&nbsp;20</p>\n      </div>\n\n      <p class=\"trip-info__cost\">\n        Total: &euro;&nbsp;<span class=\"trip-info__cost-value\">1230</span>\n      </p>\n    </section>`);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\n","import { createElement } from '../render.js';\nexport default class FilterView {\n  getTemplate() {\n    return (/*html*/\n      `<form class=\"trip-filters\" action=\"#\" method=\"get\">\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-everything\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"everything\" checked>\n      <label class=\"trip-filters__filter-label\" for=\"filter-everything\">Everything</label>\n    </div>\n\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-future\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"future\" disabled>\n      <label class=\"trip-filters__filter-label\" for=\"filter-future\">Future</label>\n    </div>\n\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-present\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"present\">\n      <label class=\"trip-filters__filter-label\" for=\"filter-present\">Present</label>\n    </div>\n\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-past\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"past\" disabled>\n      <label class=\"trip-filters__filter-label\" for=\"filter-past\">Past</label>\n    </div>\n\n    <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n  </form>`);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\n","import { createElement } from '../render.js';\nimport { CITIES, TYPES } from '../mock/consts-mock.js';\nimport { getRandomArrayElement } from '../utils.js';\n\n// мне нужно использовать цикл, чтобы создавать каждый раз офферы\n// передаю в форму готовые выбранные формы формы выбират внутри презентера\nconst getOffers = (type, offersData) => {\n  const offersByType = offersData.find((offer) => offer.type === type);\n\n  return offersByType.offers.map(\n    (offer) => `<input class=\"event__offer-checkbox  visually-hidden\" id=\"offer-${offer.id}\" type=\"checkbox\" name=\"offer-${offer.id}\">\n        <label class=\"event__offer-label\" for=\"offer-${offer.id}\">\n          <span class=\"event__offer-title\">${offer.title}</span>\n          &plus;&euro;&nbsp;\n          <span class=\"event__offer-price\">${offer.price}</span>\n        </label>`\n  ).join('');\n};\n\nconst getRandomType = () => getRandomArrayElement(TYPES);\n\n// как сделать рандомизацию выбора чекнутых кнопок?\nconst getTemplate = (offersData) => {\n  const name = getRandomArrayElement(CITIES);\n  const type = getRandomType();\n  return `<li class=\"trip-events__item\">\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n      <header class=\"event__header\">\n        <div class=\"event__type-wrapper\">\n          <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n            <span class=\"visually-hidden\">Choose event type</span>\n            <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/flight.png\" alt=\"Event type icon\">\n          </label>\n          <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n\n            <div class=\"event__type-list\">\n              <fieldset class=\"event__type-group\">\n                <legend class=\"visually-hidden\">Event type</legend>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-taxi-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"taxi\">\n                    <label class=\"event__type-label  event__type-label--taxi\" for=\"event-type-taxi-1\">Taxi</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-bus-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"bus\">\n                    <label class=\"event__type-label  event__type-label--bus\" for=\"event-type-bus-1\">Bus</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-train-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"train\">\n                    <label class=\"event__type-label  event__type-label--train\" for=\"event-type-train-1\">Train</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-ship-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"ship\">\n                    <label class=\"event__type-label  event__type-label--ship\" for=\"event-type-ship-1\">Ship</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-drive-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"drive\">\n                    <label class=\"event__type-label  event__type-label--drive\" for=\"event-type-drive-1\">Drive</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-flight-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"flight\" checked>\n                    <label class=\"event__type-label  event__type-label--flight\" for=\"event-type-flight-1\">Flight</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-check-in-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"check-in\">\n                    <label class=\"event__type-label  event__type-label--check-in\" for=\"event-type-check-in-1\">Check-in</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-sightseeing-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"sightseeing\">\n                    <label class=\"event__type-label  event__type-label--sightseeing\" for=\"event-type-sightseeing-1\">Sightseeing</label>\n                </div>\n\n                <div class=\"event__type-item\">\n                  <input id=\"event-type-restaurant-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"restaurant\">\n                    <label class=\"event__type-label  event__type-label--restaurant\" for=\"event-type-restaurant-1\">Restaurant</label>\n                </div>\n              </fieldset>\n            </div>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--destination\">\n          <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n            Flight\n          </label>\n          <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"${type} ${name}\" list=\"destination-list-1\">\n            <datalist id=\"destination-list-1\">\n              <option value=\"Amsterdam\"></option>\n              <option value=\"Geneva\"></option>\n              <option value=\"Chamonix\"></option>\n            </datalist>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--time\">\n          <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n          <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"18/03/19 12:25\">\n            &mdash;\n            <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n            <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"18/03/19 13:35\">\n            </div>\n\n            <div class=\"event__field-group  event__field-group--price\">\n              <label class=\"event__label\" for=\"event-price-1\">\n                <span class=\"visually-hidden\">Price</span>\n                &euro;\n              </label>\n              <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"160\">\n            </div>\n\n            <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n            <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n            <button class=\"event__rollup-btn\" type=\"button\">\n              <span class=\"visually-hidden\">Open event</span>\n            </button>\n          </header>\n          <section class=\"event__details\">\n            <section class=\"event__section  event__section--offers\">\n              <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n\n              <div class=\"event__available-offers\">\n              ${getOffers(type, offersData)}\n              </div>\n            </section>\n\n            <section class=\"event__section  event__section--destination\">\n              <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n              <p class=\"event__destination-description\">Chamonix-Mont-Blanc (usually shortened to Chamonix) is a resort area near the junction of France, Switzerland and Italy. At the base of Mont Blanc, the highest summit in the Alps, it's renowned for its skiing.</p>\n            </section>\n          </section>\n        </form>\n      </li>`;\n};\nexport default class EditPointView {\n\n  constructor(offersData) {\n    this.offersData = offersData;\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(getTemplate(this.offersData));\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\nexport default class ListView {\n  getTemplate() {\n    return (\n      '<ul class=\"trip-events__list\"></ul>');\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\n","import BoardPresenter from './presenter/board-presenter.js';\nimport MockService from './service/mock-service.js';\nimport DestinationsModel from './model/destinations-model.js';\nimport OffersModel from './model/offers-model.js';\nimport PointsModel from './model/points-model.js';\n\nconst header = document.querySelector('.page-header');\nconst tripMain = header.querySelector('.trip-main');\nconst tripControlsFilters = header.querySelector('.trip-controls__filters');\nconst main = document.querySelector('.page-main');\nconst tripEvents = main.querySelector('.trip-events');\n\nconst mockService = new MockService();\nconst destinationsModel = new DestinationsModel(mockService);\nconst offersModel = new OffersModel(mockService);\nconst pointsModel = new PointsModel(mockService);\n\nconst boardPresenter = new BoardPresenter({\n  sortContainer: tripEvents,\n  listContainer: tripEvents,\n  tripInfoContainer: tripMain,\n  filterContainer: tripControlsFilters,\n  pointsModel,\n  offersModel,\n  destinationsModel\n});\n\nboardPresenter.init();\n","export default class DestinationsModel {\n  constructor(service) {\n    this.service = service;\n    this.destinations = this.service.getDestinations();\n  }\n\n  get() {\n    return this.destinations;\n  }\n\n  getById(id) {\n    return this.destinations\n      .find((destination) => destination.id === id);\n  }\n}\n","export default class OffersModel {\n  constructor(service) {\n    this.service = service;\n    this.offers = this.service.getOffers();\n  }\n\n  get() {\n    return this.offers;\n  }\n\n  getByType(type) {\n    return this.offers\n      .find((offer) => offer.type === type).offers;\n  }\n}\n","export default class PointsModel {\n  constructor(service) {\n    this.service = service;\n    this.points = this.service.getPoints();\n  }\n\n  get() {\n    return this.points;\n  }\n}\n","import TripPointView from '../view/trip-point-view.js';\nimport SortView from '../view/sort-view.js';\nimport TripInfoView from '../view/trip-info-view.js';\nimport FilterView from '../view/filter-view.js';\nimport EditPointView from '../view/edit-point-view.js';\nimport ListView from '../view/list-view.js';\nimport { RenderPosition, render } from '../render.js';\n\nexport default class BoardPresenter {\n\n  constructor({ sortContainer, tripInfoContainer, filterContainer, listContainer,\n    destinationsModel, offersModel, pointsModel }) {\n    //наверху в хэдере инфо о поездке\n    this.tripInfoContainer = tripInfoContainer;\n    //фильтрация\n    this.filterContainer = filterContainer;\n    //сортировка\n    this.sortContainer = sortContainer;\n    // контейнер для точек\n    this.listContainer = listContainer;\n    //точки\n    this.destinationModel = destinationsModel;\n    this.offersModel = offersModel.get();\n    this.pointsModel = pointsModel;\n    this.points = [...pointsModel.get()];\n\n    this.board = null;\n  }\n\n  //отрисовка редактирования точки\n  renderEditPointComponent() {\n    const editPointComponent = new EditPointView(this.offersModel);\n    render(editPointComponent, this.board, RenderPosition.AFTERBEGIN);\n  }\n\n  //отрисовка инфы о трипе\n  renderInfoComponent() {\n    const tripInfoConponent = new TripInfoView();\n    render(tripInfoConponent, this.tripInfoContainer, RenderPosition.AFTERBEGIN);\n  }\n\n  //отрисовка фильтрации\n  renderFilterComponent() {\n    const filterComponent = new FilterView();\n    render(filterComponent, this.filterContainer, RenderPosition.AFTERBEGIN);\n  }\n\n  //отрисовка сортировки\n  renderSortComponent() {\n    const sortComponent = new SortView();\n    render(sortComponent, this.sortContainer);\n  }\n\n  //отрисовка контейнера для точек\n  renderListComponent() {\n    const listComponent = new ListView;\n    render(listComponent, this.listContainer);\n    this.board = document.querySelector('.trip-events__list');\n  }\n\n  //отрисовка точек\n  renderEvent(eventPoint) {\n    const point = new TripPointView({\n      point: eventPoint,\n      pointDestination: this.destinationModel,\n      pointOffers: this.offersModel\n    });\n    render(point, this.board);\n  }\n\n  renderEvents() {\n    this.points.forEach((point) => {\n      this.renderEvent(point);\n    });\n  }\n\n  init() {\n    this.renderSortComponent();\n    this.renderListComponent();\n    this.renderInfoComponent();\n    this.renderFilterComponent();\n    this.renderEditPointComponent();\n    this.renderEvents();\n  }\n}\n"],"names":["RenderPosition","BEFOREBEGIN","AFTERBEGIN","BEFOREEND","AFTEREND","createElement","template","newElement","document","innerHTML","firstElementChild","render","component","container","place","arguments","length","undefined","insertAdjacentElement","getElement","CITIES","TYPES","OFFER_TITLES","getRandomInteger","min","max","Math","ceil","floor","random","getRandomArrayElement","array","MockService","destinations","offers","points","constructor","this","generateDestinationsArray","generateOffersArray","generatePointsArray","getDestinations","getOffers","getPoints","Array","from","city","id","crypto","randomUUID","name","description","pictures","generateDestination","map","type","title","price","Price","destination","hasOffers","offersByType","find","offerByType","offersIds","slice","offer","destinationId","offerId","dateFrom","dateTo","basePrice","isFavorite","generatePoint","TripPointView","_ref","point","element","join","getTemplate","removeElement","SortView","TripInfoView","FilterView","EditPointView","offersData","ListView","header","querySelector","tripMain","tripControlsFilters","tripEvents","mockService","destinationsModel","service","get","getById","offersModel","getByType","pointsModel","boardPresenter","sortContainer","tripInfoContainer","filterContainer","listContainer","destinationModel","board","renderEditPointComponent","renderInfoComponent","renderFilterComponent","renderSortComponent","renderListComponent","renderEvent","eventPoint","pointDestination","pointOffers","renderEvents","forEach","init"],"sourceRoot":""}